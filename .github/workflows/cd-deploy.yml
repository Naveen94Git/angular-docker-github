name: CD Deploy Angular App to EC2

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Build and Deploy Angular App to EC2 via ECR"]
    types:
      - completed

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: angular-ecr-app
  IMAGE_TAG: latest

jobs:
  deploy:
#    runs-on: ubuntu-latest
    runs-on: self-hosted

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Get ECR registry URI
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: SSH into EC2 and deploy Docker container
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

          echo "Logging into ECR..."
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}

          echo "Pulling latest Docker image from ECR..."
          docker pull $IMAGE_URI

          echo "Stopping and removing old container if exists..."
          docker stop angular-app || true
          docker rm angular-app || true

          echo "Running new container..."
          docker run -d --name angular-app -p 80:80 $IMAGE_URI
